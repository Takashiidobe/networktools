% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bridge.R
\name{bridge}
\alias{bridge}
\title{Bridge Strength (inter-community strength)}
\usage{
bridge(network, communities = NULL, useCommunities = "all",
  directed = NULL, nodes = NULL)
}
\arguments{
\item{network}{a network of class "igraph", "qgraph", or an adjacency matrix representing
a network}

\item{communities}{an object of class "communities" (igraph) OR a characcter vector of
community  assignments for each node. The ordering of this vector should correspond
to the vector from argument "nodes"}

\item{useCommunities}{character vector specifying which communities should be included}

\item{directed}{logical. Directedness is automatically detected if set to "NULL" (the default).
Symmetric adjacency matrices will be undirected, unsymmetric matrices will be directed}

\item{nodes}{a vector containing the names of the nodes. If set to "NULL", this vector will
be automatically detected in the order given in "network"}
}
\value{
\code{\link{bridge}} returns a list of class "\code{bridge}" which contains:


See \code{\link{global.impact}}, \code{\link{structure.impact}}, and \code{\link{edge.impact}} for
details on each list
}
\description{
Calculates bridge strength
given a network and a prespecified set of communities.
}
\details{
Centrality metrics (betweenness, closeness, etc.) illuminate how nodes are interconnected
among the entire network. However, sometimes we are interested in the connectivity
\emph{between specific communities} in a larger network. Nodes that are important in communication
between communities can be conceptualized as bridge nodes.

Bridge centrality statistics aim to identify bridge nodes. Bridge centralities
can be calculated across all communities, or between a specific subset of coumminities (as
identified by the \code{useCommunities} argument)

The bridge() function currently returns 5 centrality metrics: 1) bridge strength,
2) bridge betweenness, 3) bridge closeness, 4) bridge expected influence (1-step), and
5) bridge expected influence (2-step)

Bridge strength is defined as the sum of the absolute value of all edges that exist between a
given node and all nodes outside its own community. In a directed network, bridge strength is
separated into bridge in-degree and bridge out-degree.

Bridge betweenness is defined as the number of times a node B lies on the shortest path between
nodes A and C, where nodes A and C come from different communities.

Bridge closeness is defined as the average length of the path from a node A to all nodes that are
not in the same community as node A

Bridge expected influence (1-step) is defined as the sum of the value (NOT absolute value) of all edges that
exist between a given node and all nodes outside its own community. In a directed network, expected influence
only considers edges extending from the given node (e.g., out-degree)

Bridge expected influence (2-step) is similar to 1-step, but also considers the indirect effect that a node may have
on other communities through other nodes. Indirect effects are weighted by the edge weight between the node of interest
and indirect nodes, and then added to the 1-step expected influence

Functions to compute bridge betweenness and bridge closeness are in development.
}
\examples{
\donttest{
graph1 <- qgraph::EBICglasso(cor(depression), n=dim(depression)[1])
graph2 <- IsingFit::IsingFit(social)$weiadj

bridge(graph1, communities=c(1, 1, 2, 2, 2, 2, 1, 2, 1))
bridge(graph2, communities=c(rep(1,8), rep(2,8)))

}
}
